[project]
name = "dotfiles-installer"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.12"
dependencies = [
    "dotfiles-logging",
    "dotfiles-package-manager",
    "dotfiles-pipeline",
    "dotfiles-template-renderer",
    "dotfiles-container-manager",
    "filesystem-path-builder",
    "pydantic>=2.11.9",
    "dynaconf>=3.2.11",
    "rich>=13.0.0",
    "shellingham>=1.5.0",
    "typer>=0.19.2",
]

[dependency-groups]
dev = [
    "black>=24.0.0",
    "isort>=5.13.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pre-commit>=3.8.0",
    "pytest>=8.4.2",
    "pytest-xdist>=3.8.0",
    "bandit>=1.8.6",
    "safety>=3.6.2",
]

[project.scripts]
dotfiles = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv.sources]
dotfiles-logging = { path = "../../common/modules/logging" }
dotfiles-package-manager = { path = "../../common/modules/package-manager" }
dotfiles-pipeline = { path = "../../common/modules/pipeline" }
dotfiles-template-renderer = { path = "../../common/modules/template-renderer" }
dotfiles-container-manager = { path = "../../common/modules/container-manager" }
filesystem-path-builder = { path = "../../common/modules/filesystem-path-builder" }

# Formatting and linting configuration
[tool.black]
line-length = 79
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 79
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__.py

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["dynaconf.*", "shellingham.*", "dotfiles.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = [
    "../../..",  # Project root for dotfiles module
    "src",       # CLI src for src.* imports
]
testpaths = ["../../../tests"]
