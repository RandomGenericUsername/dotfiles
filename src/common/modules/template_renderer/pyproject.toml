# pyproject.toml for dotfiles-template-renderer module
# Location: src/common/modules/template_renderer/pyproject.toml

[project]
name = "dotfiles-template-renderer"
version = "0.1.0"
description = "Generic template rendering module with Jinja2 support and strict validation"
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }

# Core dependencies - only what the template renderer needs
dependencies = [
    "jinja2>=3.1.0",  # Template engine with full feature support
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.8.0",
    "mypy>=1.11.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "isort>=5.13.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/dotfiles_template_renderer"]

# Formatting and linting configuration
[tool.black]
line-length = 79
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 79
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["jinja2.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
pythonpath = ["src"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]

